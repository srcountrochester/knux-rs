name: CI
on:
  push: { branches: [master] }
  pull_request: {}

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: default
            args: "test --verbose"
          - name: sqlite
            args: "test --no-default-features --features sqlite --verbose"
          - name: postgres
            args: "test --no-default-features --features postgres --verbose"
          - name: mysql
            args: "test --no-default-features --features mysql --verbose"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.100.0
        with:
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: rustc -Vv && cargo -V
      - name: Run ${{ matrix.name }}
        run: cargo ${{ matrix.args }}

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.100.0
        with:
          components: rustfmt
      - name: rustfmt (check)
        run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: default
            feat: ""
            no_defaults: ""
          - name: sqlite
            feat: "--features sqlite"
            no_defaults: "--no-default-features --features sqlite"
          - name: postgres
            feat: "--features postgres"
            no_defaults: "--no-default-features --features postgres"
          - name: mysql
            no_defaults: "--no-default-features --features mysql"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.100.0
        with: { components: clippy }
      - uses: Swatinem/rust-cache@v2

      - name: Clippy strict (src only) ${{ matrix.name }}
        run: |
          cargo clippy --lib --bins ${{ matrix.no_defaults }} -- -W warnings

      - name: Clippy relaxed (tests) ${{ matrix.name }}
        run: |
          cargo clippy --tests ${{ matrix.no_defaults }} -- \
            -A clippy::into_iter_on_ref
